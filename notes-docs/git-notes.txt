git config --global user.name "person's name"
git config --global user.email "user@email.com"
git config --global --list

git status

git add "filename" or "." for all

git commit -m "commit message"

git push origin master

[wtooles:~] $ find . -name .gitconfig -print
./.gitconfig
[wtooles:~] $ cat .gitconfig
[user]
        email = btooles@gmail.com
        name = Bill Tooles
[wtooles:~] $


git pull origin master
***Always do a pull before you do a push*** (BEST PRACTICE)
Because it updates our local repo with any the changes that may have happened on the remote repo down to our local repo to make sure it is up to date BEFORE we do pushes up to our remote repository

To list all the files being tracked by git:
git ls-files

git add .
Adds all tracked files recursively to git tracking

To "unstage" staged changes:

[wtooles:~/projects … rter-web/level1] master(+0/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   level1-file.txt

[wtooles:~/projects … rter-web/level1] master(+0/-0,4) ± git reset HEAD level1-file.txt   <--------------
Unstaged changes after reset:
M       level1/level1-file.txt
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   level1-file.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ±


To discard changes in working directory:

[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   level1-file.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ±

git checkout -- <file>   <----------------------------

[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git checkout -- level1-file.txt
[wtooles:~/projects … rter-web/level1] master(4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects … rter-web/level1] master(4) ±


To rename files (WITH git):
git mv level3-file.txt level3.txt

Example:
[wtooles:~/projects … el1/level2/level3] master(4) ± git mv level3-file.txt level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ± ls
level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level3-file.txt -> level3.txt

[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ±

To rename files (WITHOUT git):
mv level2-file.txt level2.txt

Example:
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± git status
On branch master
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    level2-file.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        level2.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± git add -A
[wtooles:~/projects … web/level1/level2] master(+0/-0,5) ± git status
On branch master
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2-file.txt -> level2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,5) ±

Rename file, then back change out(simple way):
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git mv level2.txt 2.txt
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± ls
2.txt  level3
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2.txt -> 2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git mv 2.txt level2.txt
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects … web/level1/level2] master(6) ±


Moving files to a different directory:

Example:
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git mv level2.txt level3/
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± ls
level3
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± cd level3/
[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± ls
level2.txt  level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    ../level2.txt -> level2.txt

[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± cd ..
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2.txt -> level3/level2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ±

To remove a file that is NOT being tracked by git, use OS "rm":
rm <filename>

To remove a file that IS being tracked by git, us git "rm":
[wtooles:~/projects/starter-web] master(8) ± ls
404.html                          css          hipster.txt  js           README.md
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1       robots.txt
crossdomain.xml                   fonts        index.html   newfile.txt  simple.html
[wtooles:~/projects/starter-web] master(8) ± git rm newfile.txt
rm 'newfile.txt'
[wtooles:~/projects/starter-web] master(+0/-0,8) ± ls
404.html                          css          hipster.txt  js         robots.txt
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1     simple.html
crossdomain.xml                   fonts        index.html   README.md
[wtooles:~/projects/starter-web] master(+0/-0,8) ± git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    newfile.txt

[wtooles:~/projects/starter-web] master(+0/-0,8) ±

To backout a staged deletion (deleted using "git rm"):

Example:
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git rm hipster.txt
rm 'hipster.txt'
[wtooles:~/projects/starter-web] master(+0/-0,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-0,9) 2 ± git ls-files | egrep hipster.txt
[wtooles:~/projects/starter-web] master(+0/-0,9) 1 ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    hipster.txt

[wtooles:~/projects/starter-web] master(+0/-0,9) ± git reset HEAD hipster.txt
Unstaged changes after reset:
D       hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-7,9) 2 ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    hipster.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git checkout -- hipster.txt
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] master(9) ±

To backout a staged deletion (deleted using OS "rm"):
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± rm hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-7,9) 2 ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    hipster.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git checkout -- hipster.txt
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] master(9) ±


To get help for "git log":
git help log

To get commit history:
git log
git log --abbrev-commit
git log --oneline
git log --oneline --graph --decorate
git log c28cdc3...205034b (range)
git log --since="3 days ago"
git log -- hipster.txt
git log --follow -- level1/level2/level2.txt

git show 5789638453410eb27e4a685733bd758ac5439e93 (shows commit info, including the display of what changed)
(etc.)

Creating Aliases:
[wtooles:~/projects/starter-web] master ± git log --all --graph --oneline --decorate
* c28cdc3 (HEAD -> master, origin/master, origin/HEAD) Deleting new file
* 5789638 Moving level 2 file back to level 2 directory
* f54648b Moving file from level 2 to level 3
* 205034b Renaming Level 2 file
* bf74cac Renaming level3 file
* 663f6b0 Adding several files recursively
* dc6178a More ipsum for hipsters
* e0f9951 Adding new file
* 5fd5676 Adding more ipsum text
* 39c8943 My first commit
*   4beb7f0 Merge pull request #6 from jasongtaylor/feature-readme
|\
| * e73f914 Adding Purpose section to README
| * 34f563b Adding README file
|/
* 5c05047 Copying files from initializr project zip file and then creating simple.html as basis for super simple pages
[wtooles:~/projects/starter-web] master ± git hist
git: 'hist' is not a git command. See 'git --help'.

Did you mean this?
        bisect
[wtooles:~/projects/starter-web] master ± git config --global alias.hist "log --all --graph --oneline --decorate"
[wtooles:~/projects/starter-web] master ± git hist
* c28cdc3 (HEAD -> master, origin/master, origin/HEAD) Deleting new file
* 5789638 Moving level 2 file back to level 2 directory
* f54648b Moving file from level 2 to level 3
* 205034b Renaming Level 2 file
* bf74cac Renaming level3 file
* 663f6b0 Adding several files recursively
* dc6178a More ipsum for hipsters
* e0f9951 Adding new file
* 5fd5676 Adding more ipsum text
* 39c8943 My first commit
*   4beb7f0 Merge pull request #6 from jasongtaylor/feature-readme
|\
| * e73f914 Adding Purpose section to README
| * 34f563b Adding README file
|/
* 5c05047 Copying files from initializr project zip file and then creating simple.html as basis for super simple pages
[wtooles:~/projects/starter-web] master ± cat ~/.gitconfig
[user]
        email = btooles@gmail.com
        name = Bill Tooles
[core]
        editor = atom
[diff]
        tool = kdiff3
[merge]
        tool = kdiff3
[alias]
        hist = log --all --graph --oneline --decorate
[wtooles:~/projects/starter-web] master ±

Ignoring files with .gitignore
⌂69% [wtooles:~/projects/starter-web] master(2) ± ls
404.html                          css          hipster.txt  js      README.md
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1  robots.txt
crossdomain.xml                   fonts        index.html   log     simple.html
[wtooles:~/projects/starter-web] master(2) ± cat .gitignore
log/
[wtooles:~/projects/starter-web] master(2) ±
Ignores the log directory
