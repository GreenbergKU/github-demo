git config --global user.name "person's name"
git config --global user.email "user@email.com"
git config --global --list

git status

git add "filename" or "." for all

git commit -m "commit message"

git push origin master

[wtooles:~] $ find . -name .gitconfig -print
./.gitconfig
[wtooles:~] $ cat .gitconfig
[user]
        email = btooles@gmail.com
        name = Bill Tooles
[wtooles:~] $


git pull origin master
***Always do a pull before you do a push*** (BEST PRACTICE)
Because it updates our local repo with any the changes that may have happened on the remote repo down to our local repo to make sure it is up to date BEFORE we do pushes up to our remote repository

To list all the files being tracked by git:
git ls-files

git add .
Adds all tracked files recursively to git tracking

To "unstage" staged changes:

[wtooles:~/projects … rter-web/level1] master(+0/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   level1-file.txt

[wtooles:~/projects … rter-web/level1] master(+0/-0,4) ± git reset HEAD level1-file.txt   <--------------
Unstaged changes after reset:
M       level1/level1-file.txt
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   level1-file.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ±


To discard changes in working directory:

[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   level1-file.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ±

git checkout -- <file>   <----------------------------

[wtooles:~/projects … rter-web/level1] master(+2/-0,4) ± git checkout -- level1-file.txt
[wtooles:~/projects … rter-web/level1] master(4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects … rter-web/level1] master(4) ±


To rename files (WITH git):
git mv level3-file.txt level3.txt

Example:
[wtooles:~/projects … el1/level2/level3] master(4) ± git mv level3-file.txt level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ± ls
level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level3-file.txt -> level3.txt

[wtooles:~/projects … el1/level2/level3] master(+0/-0,4) ±

To rename files (WITHOUT git):
mv level2-file.txt level2.txt

Example:
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± git status
On branch master
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    level2-file.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        level2.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects … web/level1/level2] master(+0/-3,5)* ± git add -A
[wtooles:~/projects … web/level1/level2] master(+0/-0,5) ± git status
On branch master
Your branch is ahead of 'origin/master' by 5 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2-file.txt -> level2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,5) ±

Rename file, then back change out(simple way):
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git mv level2.txt 2.txt
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± ls
2.txt  level3
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2.txt -> 2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git mv 2.txt level2.txt
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects … web/level1/level2] master(6) ±


Moving files to a different directory:

Example:
[wtooles:~/projects … web/level1/level2] master(6) ± ls
level2.txt  level3
[wtooles:~/projects … web/level1/level2] master(6) ± git mv level2.txt level3/
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± ls
level3
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± cd level3/
[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± ls
level2.txt  level3.txt
[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    ../level2.txt -> level2.txt

[wtooles:~/projects … el1/level2/level3] master(+0/-0,6) ± cd ..
[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ± git status
On branch master
Your branch is ahead of 'origin/master' by 6 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        renamed:    level2.txt -> level3/level2.txt

[wtooles:~/projects … web/level1/level2] master(+0/-0,6) ±

To remove a file that is NOT being tracked by git, use OS "rm":
rm <filename>

To remove a file that IS being tracked by git, us git "rm":
[wtooles:~/projects/starter-web] master(8) ± ls
404.html                          css          hipster.txt  js           README.md
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1       robots.txt
crossdomain.xml                   fonts        index.html   newfile.txt  simple.html
[wtooles:~/projects/starter-web] master(8) ± git rm newfile.txt
rm 'newfile.txt'
[wtooles:~/projects/starter-web] master(+0/-0,8) ± ls
404.html                          css          hipster.txt  js         robots.txt
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1     simple.html
crossdomain.xml                   fonts        index.html   README.md
[wtooles:~/projects/starter-web] master(+0/-0,8) ± git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    newfile.txt

[wtooles:~/projects/starter-web] master(+0/-0,8) ±

To backout a staged deletion (deleted using "git rm"):

Example:
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git rm hipster.txt
rm 'hipster.txt'
[wtooles:~/projects/starter-web] master(+0/-0,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-0,9) 2 ± git ls-files | egrep hipster.txt
[wtooles:~/projects/starter-web] master(+0/-0,9) 1 ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        deleted:    hipster.txt

[wtooles:~/projects/starter-web] master(+0/-0,9) ± git reset HEAD hipster.txt
Unstaged changes after reset:
D       hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-7,9) 2 ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    hipster.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git checkout -- hipster.txt
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] master(9) ±

To backout a staged deletion (deleted using OS "rm"):
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± rm hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± ls hipster.txt
ls: cannot access 'hipster.txt': No such file or directory
[wtooles:~/projects/starter-web] master(+0/-7,9) 2 ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        deleted:    hipster.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] master(+0/-7,9) ± git checkout -- hipster.txt
[wtooles:~/projects/starter-web] master(9) ± ls hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git ls-files | egrep hipster.txt
hipster.txt
[wtooles:~/projects/starter-web] master(9) ± git status
On branch master
Your branch is ahead of 'origin/master' by 9 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] master(9) ±


To get help for "git log":
git help log

To get commit history:
git log
git log --abbrev-commit
git log --oneline
git log --oneline --graph --decorate
git log c28cdc3...205034b (range)
git log --since="3 days ago"
git log -- hipster.txt
git log --follow -- level1/level2/level2.txt

git show 5789638453410eb27e4a685733bd758ac5439e93 (shows commit info, including the display of what changed)
(etc.)

Creating Aliases:
[wtooles:~/projects/starter-web] master ± git log --all --graph --oneline --decorate
* c28cdc3 (HEAD -> master, origin/master, origin/HEAD) Deleting new file
* 5789638 Moving level 2 file back to level 2 directory
* f54648b Moving file from level 2 to level 3
* 205034b Renaming Level 2 file
* bf74cac Renaming level3 file
* 663f6b0 Adding several files recursively
* dc6178a More ipsum for hipsters
* e0f9951 Adding new file
* 5fd5676 Adding more ipsum text
* 39c8943 My first commit
*   4beb7f0 Merge pull request #6 from jasongtaylor/feature-readme
|\
| * e73f914 Adding Purpose section to README
| * 34f563b Adding README file
|/
* 5c05047 Copying files from initializr project zip file and then creating simple.html as basis for super simple pages
[wtooles:~/projects/starter-web] master ± git hist
git: 'hist' is not a git command. See 'git --help'.

Did you mean this?
        bisect
[wtooles:~/projects/starter-web] master ± git config --global alias.hist "log --all --graph --oneline --decorate"
[wtooles:~/projects/starter-web] master ± git hist
* c28cdc3 (HEAD -> master, origin/master, origin/HEAD) Deleting new file
* 5789638 Moving level 2 file back to level 2 directory
* f54648b Moving file from level 2 to level 3
* 205034b Renaming Level 2 file
* bf74cac Renaming level3 file
* 663f6b0 Adding several files recursively
* dc6178a More ipsum for hipsters
* e0f9951 Adding new file
* 5fd5676 Adding more ipsum text
* 39c8943 My first commit
*   4beb7f0 Merge pull request #6 from jasongtaylor/feature-readme
|\
| * e73f914 Adding Purpose section to README
| * 34f563b Adding README file
|/
* 5c05047 Copying files from initializr project zip file and then creating simple.html as basis for super simple pages
[wtooles:~/projects/starter-web] master ± cat ~/.gitconfig
[user]
        email = btooles@gmail.com
        name = Bill Tooles
[core]
        editor = atom
[diff]
        tool = kdiff3
[merge]
        tool = kdiff3
[alias]
        hist = log --all --graph --oneline --decorate
[wtooles:~/projects/starter-web] master ±

Ignoring files with .gitignore
⌂69% [wtooles:~/projects/starter-web] master(2) ± ls
404.html                          css          hipster.txt  js      README.md
apple-touch-icon-precomposed.png  favicon.ico  humans.txt   level1  robots.txt
crossdomain.xml                   fonts        index.html   log     simple.html
[wtooles:~/projects/starter-web] master(2) ± cat .gitignore
log/
[wtooles:~/projects/starter-web] master(2) ±
Ignores the log directory

Comparisons
Compare working directory to Staging Area - git diff or git difftool (if difftool is setup):
[wtooles:~/projects/starter-web] master(+0/-0,4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   README.md

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

[wtooles:~/projects/starter-web] master(+2/-0,4) ± git diff
diff --git a/README.md b/README.md
index d80a8e8..b37a0c5 100644
--- a/README.md
+++ b/README.md
@@ -12,4 +12,6 @@ As stated above, the maiin purpose is to provide simple examples for Git trainin

 ## Deployment

+This is a simple web project, deployment can be on any web server or even local file system.
+
 ## How To Contribute
[wtooles:~/projects/starter-web] master(+2/-0,4) ± git difftool
When "git difftool" is configured, it will bring up the setup graphical difftool (e.g., p4merge, kdiff3, meld)

Compare working directory to last known commit (repository) - git diff HEAD or git difftool HEAD:
[wtooles:~/projects/starter-web] master(+2/-0,4) ± git diff HEAD
diff --git a/README.md b/README.md
index b72bb08..b37a0c5 100644
--- a/README.md
+++ b/README.md
@@ -8,6 +8,10 @@ This is example is to show different parts of the Git repository and various com

 ## Purpose

+As stated above, the maiin purpose is to provide simple examples for Git training demos.
+
 ## Deployment

+This is a simple web project, deployment can be on any web server or even local file system.
+
 ## How To Contribute
[wtooles:~/projects/starter-web] master(+2/-0,4) ± git difftool HEAD
[wtooles:~/projects/starter-web] master(+2/-0,4) ±
git difftool HEAD will give you the same info graphically

Compare staging area to last known commit (repository) - git diff --staged HEAD or git difftool --staged HEAD:
[wtooles:~/projects/starter-web] master(+2/-0,4) ± git diff --staged HEAD
diff --git a/README.md b/README.md
index b72bb08..d80a8e8 100644
--- a/README.md
+++ b/README.md
@@ -8,6 +8,8 @@ This is example is to show different parts of the Git repository and various com

 ## Purpose

+As stated above, the maiin purpose is to provide simple examples for Git training demos.
+
 ## Deployment

 ## How To Contribute
[wtooles:~/projects/starter-web] master(+2/-0,4) ±


Compare working directory to Staging Area BUT...
Limit git diff to one file:  git diff -- <filename> or git difftool -- <filename>
[wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff
diff --git a/README.md b/README.md
index d80a8e8..b37a0c5 100644
--- a/README.md
+++ b/README.md
@@ -12,4 +12,6 @@ As stated above, the maiin purpose is to provide simple examples for Git trainin

 ## Deployment

+This is a simple web project, deployment can be on any web server or even local file system.
+
 ## How To Contribute
diff --git a/simple.html b/simple.html
index ca5e908..8ec03d1 100644
--- a/simple.html
+++ b/simple.html
@@ -1,6 +1,6 @@
 <!DOCTYPE html>
 <head>
-       <title></title>
+       <title>Simple Title</title>
        <link rel="stylesheet" href="css/bootstrap.min.css">
        <style>
                body {
[wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff -- README.md
diff --git a/README.md b/README.md
index d80a8e8..b37a0c5 100644
--- a/README.md
+++ b/README.md
@@ -12,4 +12,6 @@ As stated above, the maiin purpose is to provide simple examples for Git trainin

 ## Deployment

+This is a simple web project, deployment can be on any web server or even local file system.
+
 ## How To Contribute
 [wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff -- simple.html
 diff --git a/simple.html b/simple.html
 index ca5e908..8ec03d1 100644
 --- a/simple.html
 +++ b/simple.html
 @@ -1,6 +1,6 @@
  <!DOCTYPE html>
  <head>
 -       <title></title>
 +       <title>Simple Title</title>
         <link rel="stylesheet" href="css/bootstrap.min.css">
         <style>
                 body {
 [wtooles:~/projects/starter-web] master(+3/-1,4) ±


 Comparing between commits:
 git diff <some commit> HEAD
 git diff <some commit> <some other commit>

 [wtooles:~/projects/starter-web] master(+3/-1,4) ± git log --oneline
fcbad46 Adding introduction text
da25ec1 Adding description
d1b869b Adding new section:  Deployment
a205470 Updated README.md
d58b9c3 Excluding log file directory
19939ca Adding .gitignore file to exclude unwanted files
c28cdc3 Deleting new file
5789638 Moving level 2 file back to level 2 directory
f54648b Moving file from level 2 to level 3
205034b Renaming Level 2 file
bf74cac Renaming level3 file
663f6b0 Adding several files recursively
dc6178a More ipsum for hipsters
e0f9951 Adding new file
5fd5676 Adding more ipsum text
39c8943 My first commit
4beb7f0 Merge pull request #6 from jasongtaylor/feature-readme
e73f914 Adding Purpose section to README
34f563b Adding README file
5c05047 Copying files from initializr project zip file and then creating simple.html as basis for super simple pages

 [wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff c28cdc3 HEAD
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..80dd262
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+log/
diff --git a/README.md b/README.md
index 06bb023..b72bb08 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,13 @@
-# Starter Web Repo
+# Starter Web Project

-This repository is for showing how Git and GitHub work
+This is a simple website project for showing how to use Git and Github together.
+
+## Introduction
+
+This is example is to show different parts of the Git repository and various commands using a web project.

 ## Purpose

-Sample website with plenty of files for demos
\ No newline at end of file
+## Deployment
+
+## How To Contribute
[wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff 34f563b e73f914
diff --git a/README.md b/README.md
index 84cb45c..06bb023 100644
--- a/README.md
+++ b/README.md
@@ -1,3 +1,7 @@
 # Starter Web Repo

-This repository is for showing how Git and GitHub work
\ No newline at end of file
+This repository is for showing how Git and GitHub work
+
+## Purpose
+
+Sample website with plenty of files for demos
\ No newline at end of file
[wtooles:~/projects/starter-web] master(+3/-1,4) ±

Compare HEAD and HEAD-1
[wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff HEAD HEAD^
diff --git a/README.md b/README.md
index b72bb08..26cbb46 100644
--- a/README.md
+++ b/README.md
@@ -4,8 +4,6 @@ This is a simple website project for showing how to use Git and Github together.

 ## Introduction

-This is example is to show different parts of the Git repository and various commands using a web project.
-
 ## Purpose

 ## Deployment
[wtooles:~/projects/starter-web] master(+3/-1,4) ± git diff HEAD^ HEAD
diff --git a/README.md b/README.md
index 26cbb46..b72bb08 100644
--- a/README.md
+++ b/README.md
@@ -4,6 +4,8 @@ This is a simple website project for showing how to use Git and Github together.

 ## Introduction

+This is example is to show different parts of the Git repository and various commands using a web project.
+
 ## Purpose

 ## Deployment
[wtooles:~/projects/starter-web] master(+3/-1,4) ±

Comparisons - Local vs Remote:
git diff <local branch> <remote branch>
git diff master origin/master
git difftool master origin/master

Branching & Merging
The Branch Command
[wtooles:~/projects/starter-web] master ± git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] master ± git branch mynewbranch
[wtooles:~/projects/starter-web] master ± git branch -a
* master
  mynewbranch
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] master ± git checkout mynewbranch
Switched to branch 'mynewbranch'
[wtooles:~/projects/starter-web] mynewbranch ± git branch
  master
* mynewbranch
[wtooles:~/projects/starter-web] mynewbranch ± git branch -a
  master
* mynewbranch
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] mynewbranch ±

Rename a branch:
[wtooles:~/projects/starter-web] master ± git branch -m mynewbranch newbranch
[wtooles:~/projects/starter-web] master ± git branch -a
* master
  newbranch
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] master ±

Delete a branch:
[wtooles:~/projects/starter-web] master ± git branch -d newbranch
Deleted branch newbranch (was f343bb0).
[wtooles:~/projects/starter-web] master ± git branch -a
* master
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] master ±

Create a branch and check it out at the same time:
[wtooles:~/projects/starter-web] master ± git checkout -b title-change
Switched to a new branch 'title-change'
[wtooles:~/projects/starter-web] title-change ± git branch -a
  master
* title-change
  remotes/origin/HEAD -> origin/master
  remotes/origin/master
[wtooles:~/projects/starter-web] title-change ± git status
On branch title-change
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] title-change ±
[wtooles:~/projects/starter-web] title-change ± atom simple.html
[wtooles:~/projects/starter-web] title-change ± git status
On branch title-change
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   simple.html

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] title-change(+1/-1) ± git commit -am "Changing title of HTML file"
[title-change 3698596] Changing title of HTML file
 1 file changed, 1 insertion(+), 1 deletion(-)
[wtooles:~/projects/starter-web] title-change ± git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
[wtooles:~/projects/starter-web] master ± git diff master title-change
diff --git a/simple.html b/simple.html
index 8ec03d1..57e5ae2 100644
--- a/simple.html
+++ b/simple.html
@@ -1,6 +1,6 @@
 <!DOCTYPE html>
 <head>
 -       <title>Simple Title</title>
+       <title>An example Website</title>
        <link rel="stylesheet" href="css/bootstrap.min.css">
        <style>
                body {
[wtooles:~/projects/starter-web] master ± git difftool master title-change
[wtooles:~/projects/starter-web] master ± git merge title-change
Updating f343bb0..3698596
Fast-forward
 simple.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
[wtooles:~/projects/starter-web] master(1) ±

Fast forwarding is only possible when there are no changes made on the target branch

[wtooles:~/projects/starter-web] master(1) ± git branch
* master
  title-change
[wtooles:~/projects/starter-web] master(1) ± git branch -d title-change
Deleted branch title-change (was 3698596).
[wtooles:~/projects/starter-web] master(1) ± git branch
* master
[wtooles:~/projects/starter-web] master(1) ±

Merge with no fast forwards:
[wtooles:~/projects/starter-web] master(1) ± git branch
* master
[wtooles:~/projects/starter-web] master(1) ± git checkout -b add-copyright
Switched to a new branch 'add-copyright'
[wtooles:~/projects/starter-web] add-copyright ± git branch
* add-copyright
  master
[wtooles:~/projects/starter-web] add-copyright ± atom simple.html
[wtooles:~/projects/starter-web] add-copyright ± git status
On branch add-copyright
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   simple.html

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] add-copyright(+3/-0) ± git commit -am "Adding copyright notice"
[add-copyright 15073d6] Adding copyright notice
 1 file changed, 3 insertions(+)
[wtooles:~/projects/starter-web] add-copyright ± atom README.md
[wtooles:~/projects/starter-web] add-copyright ± git status
On branch add-copyright
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] add-copyright(+4/-0) ± git commit -am "Adding copyright notice to README.md"
[add-copyright 339ad54] Adding copyright notice to README.md
 1 file changed, 4 insertions(+)
[wtooles:~/projects/starter-web] add-copyright ± git status
On branch add-copyright
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] add-copyright ± git hist
* 339ad54 (HEAD -> add-copyright) Adding copyright notice to README.md
* 15073d6 Adding copyright notice
* 3698596 (master) Changing title of HTML file
* f343bb0 (origin/master, origin/HEAD) Updating repo with changes from compare section
* fcbad46 Adding introduction text
[wtooles:~/projects/starter-web] add-copyright ± git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 1 commit.
  (use "git push" to publish your local commits)
[wtooles:~/projects/starter-web] master(1) ± git branch
  add-copyright
* master
[wtooles:~/projects/starter-web] master(1) ± git merge add-copyright --no-ff
Merge made by the 'recursive' strategy.
 README.md   | 4 ++++
 simple.html | 3 +++
 2 files changed, 7 insertions(+)
[wtooles:~/projects/starter-web] master(4) ± git hist
*   193ab14 (HEAD -> master) Merge branch 'add-copyright'
|\
| * 339ad54 (add-copyright) Adding copyright notice to README.md
| * 15073d6 Adding copyright notice
|/
* 3698596 Changing title of HTML file
* f343bb0 (origin/master, origin/HEAD) Updating repo with changes from compare section
* fcbad46 Adding introduction text

Branching & Merging
Automatic Merges

[wtooles:~/projects/starter-web] master(4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] master(4) ± git branch
* master
[wtooles:~/projects/starter-web] master(4) ± git checkout -b simple-changes
Switched to a new branch 'simple-changes'
[wtooles:~/projects/starter-web] simple-changes ± git branch
  master
* simple-changes
[wtooles:~/projects/starter-web] simple-changes ± atom humans.txt
[wtooles:~/projects/starter-web] simple-changes ± git status
On branch simple-changes
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   humans.txt

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] simple-changes(+1/-1) ± git commit -am "Adding team member to humans.txt"
[simple-changes c824473] Adding team member to humans.txt
 1 file changed, 1 insertion(+), 1 deletion(-)
[wtooles:~/projects/starter-web] simple-changes ± git status
On branch simple-changes
nothing to commit, working directory clean
[wtooles:~/projects/starter-web] simple-changes ± git checkout master
Switched to branch 'master'
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
[wtooles:~/projects/starter-web] master(4) ± atom README.md
[wtooles:~/projects/starter-web] master(4) ± git status
On branch master
Your branch is ahead of 'origin/master' by 4 commits.
  (use "git push" to publish your local commits)
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   README.md

no changes added to commit (use "git add" and/or "git commit -a")
[wtooles:~/projects/starter-web] master(+2/-0,4) ± git commit -am "Adding instructions on how to contribute"
[master 8a449d0] Adding instructions on how to contribute
 1 file changed, 2 insertions(+)
[wtooles:~/projects/starter-web] master(5) ± git hist
* 8a449d0 (HEAD -> master) Adding instructions on how to contribute
| * c824473 (simple-changes) Adding team member to humans.txt
|/
*   193ab14 Merge branch 'add-copyright'
|\
| * 339ad54 Adding copyright notice to README.md
| * 15073d6 Adding copyright notice
|/
* 3698596 Changing title of HTML file
* f343bb0 (origin/master, origin/HEAD) Updating repo with changes from compare section
* fcbad46 Adding introduction text
* da25ec1 Adding description
[wtooles:~/projects/starter-web] master(5) ± git branch
* master
  simple-changes
[wtooles:~/projects/starter-web] master(5) ± git merge simple-changes -m "Merging changes from simple-changes branch"
Merge made by the 'recursive' strategy.
 humans.txt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
[wtooles:~/projects/starter-web] master(7) ± git hist
*   acd7dda (HEAD -> master) Merging changes from simple-changes branch
|\
| * c824473 (simple-changes) Adding team member to humans.txt
* | 8a449d0 Adding instructions on how to contribute
|/
*   193ab14 Merge branch 'add-copyright'
|\
| * 339ad54 Adding copyright notice to README.md
| * 15073d6 Adding copyright notice
|/
* 3698596 Changing title of HTML file
* f343bb0 (origin/master, origin/HEAD) Updating repo with changes from compare section
* fcbad46 Adding introduction text
* da25ec1 Adding description
[wtooles:~/projects/starter-web] master(7) ± git log -n5 --oneline
acd7dda Merging changes from simple-changes branch
8a449d0 Adding instructions on how to contribute
c824473 Adding team member to humans.txt
193ab14 Merge branch 'add-copyright'
339ad54 Adding copyright notice to README.md
[wtooles:~/projects/starter-web] master(7) 128 ± git log -n5 --oneline --decorate --all --graph
*   acd7dda (HEAD -> master) Merging changes from simple-changes branch
|\
| * c824473 (simple-changes) Adding team member to humans.txt
* | 8a449d0 Adding instructions on how to contribute
|/
*   193ab14 Merge branch 'add-copyright'
|\
| * 339ad54 Adding copyright notice to README.md
[wtooles:~/projects/starter-web] master(7) ± git branch
* master
  simple-changes
[wtooles:~/projects/starter-web] master(7) ± git branch -d simple-changes
Deleted branch simple-changes (was c824473).
[wtooles:~/projects/starter-web] master(7) ± git branch
* master
[wtooles:~/projects/starter-web] master(7) ± git log -n5 --oneline --decorate --all --graph
*   acd7dda (HEAD -> master) Merging changes from simple-changes branch
|\
| * c824473 Adding team member to humans.txt
* | 8a449d0 Adding instructions on how to contribute
|/
*   193ab14 Merge branch 'add-copyright'
|\
| * 339ad54 Adding copyright notice to README.md
[wtooles:~/projects/starter-web] master(7) ±

Branching & Merging
Merge Conflict & Resolution
